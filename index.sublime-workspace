{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"be",
				"beforeEach"
			],
			[
				"ge",
				"getInitialContacts"
			],
			[
				"addr",
				"addresBook"
			],
			[
				"fun",
				"function"
			],
			[
				"pr",
				"prototype"
			],
			[
				"A",
				"AddressBook"
			],
			[
				"ad",
				"addressBook"
			],
			[
				"co",
				"contacts"
			],
			[
				"this",
				"thisConcact"
			],
			[
				"br",
				"browserSync"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"P",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"package Control: Install Package",
				"Package Control: Install Package"
			],
			[
				"package Control:",
				"Package Control: Add Channel"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"Package Control: Install Package",
			"Emmet",
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/tommcginty/Documents/Udacity/ud549/spec/ContactSpec.js",
		"/Users/tommcginty/Documents/Udacity/ud549/README.md",
		"/Users/tommcginty/Documents/Udacity/gulpfile.js",
		"/Users/tommcginty/Documents/Udacity/ud892/Lesson 3/gulpfile.js",
		"/Users/tommcginty/Documents/Udacity/MemoryGameProject-master/index.html",
		"/Users/tommcginty/Documents/Udacity/MemoryGameProject-master/README.md",
		"/Users/tommcginty/Documents/Udacity/frontend-nanodegree-arcade-game/js/resources.js",
		"/Users/tommcginty/Documents/Udacity/frontend-nanodegree-arcade-game/js/engine.js",
		"/Users/tommcginty/Documents/Udacity/frontend-nanodegree-arcade-game/js/app.js",
		"/Users/tommcginty/Documents/Udacity/frontend-nanodegree-arcade-game/index.html",
		"/Users/tommcginty/Documents/Udacity/frontend-nanodegree-arcade-game/css/style.css",
		"/Users/tommcginty/Documents/Sublime Licence",
		"/Users/tommcginty/Downloads/untitled",
		"/wwww"
	],
	"find":
	{
		"height": 97.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "index.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 177.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
